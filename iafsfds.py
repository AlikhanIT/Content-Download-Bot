import asyncio

from yt_dlp import YoutubeDL
from bot.utils.log import log_action


# üì¶ –ü–æ–ª—É—á–∞–µ–º 'clen' –∏–ª–∏ —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –∏–∑ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ
async def get_clen(url):
    ydl_opts = {
        'quiet': True,
        'skip_download': True,
        'extract_flat': False,  # –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥—Ä–æ–±–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã
        'format': 'best',  # –ò–∑–≤–ª–µ–∫–∞–µ–º –ª—É—á—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ
    }

    try:
        with YoutubeDL(ydl_opts) as ydl:
            info_dict = ydl.extract_info(url, download=False)
            formats = info_dict.get('formats', [])

            for fmt in formats:
                # üîé –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ 'filesize' –∏–ª–∏ 'clen'
                clen = fmt.get('filesize') or fmt.get('filesize_approx') or fmt.get('clen')
                if clen:
                    return int(clen)  # ‚úÖ –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –≤ –±–∞–π—Ç–∞—Ö

            log_action("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ 'clen' –∏–ª–∏ 'filesize'.")
            return None

    except Exception as e:
        log_action(f"‚ùå –û—à–∏–±–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è 'clen': {e}")
        return None


# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ–±–æ–ª–æ—á–∫–∞ –¥–ª—è –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏
async def main():
    url = "https://www.youtube.com/watch?v=14R_P8fk4Do"
    clen = await get_clen(url)

    if clen:
        print(f"–†–∞–∑–º–µ—Ä –≤–∏–¥–µ–æ: {clen / (1024 * 1024):.2f} MB")
    else:
        print("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–∞–∑–º–µ—Ä –≤–∏–¥–µ–æ.")


# –ó–∞–ø—É—Å–∫ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
if __name__ == "__main__":
    asyncio.run(main())
