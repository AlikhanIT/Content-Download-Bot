version: '3.3'

services:
  vpn:
    image: bubuntux/nordvpn
    container_name: nordvpn
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    environment:
      - TOKEN=${NORDVPN_TOKEN}
      - CONNECT=Netherlands
      - TECHNOLOGY=NordLynx
      - KILLSWITCH=enabled
      - DNS=1.1.1.1,8.8.8.8
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=1
    restart: unless-stopped
    networks:
      - bot_network
    logging:
      driver: "none"
    healthcheck:
      test: ["CMD", "ping", "-c", "1", "8.8.8.8"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./vpn-reconnect.sh:/vpn-reconnect.sh
    command: sh -c "chmod +x /vpn-reconnect.sh && /vpn-reconnect.sh & /entrypoint.sh"

  telegram_bot_api:
    build:
      context: .
      dockerfile: Dockerfile.telegram-bot
    environment:
      API_ID: ${API_ID}
      API_HASH: ${API_HASH}
    depends_on:
      vpn:
        condition: service_healthy
    network_mode: "service:vpn"
    restart: unless-stopped
    command: sh -c "sleep 10 && ./bin/telegram-bot-api --local --api-id=$API_ID --api-hash=$API_HASH"

  python_bot:
    build:
      context: .
      dockerfile: Dockerfile.python
    environment:
      API_TOKEN: ${API_TOKEN}
      LOCAL_API_URL: http://localhost:8081
      MONGO_URI: mongodb://mongodb:27017/telegram_bot_d
    depends_on:
      mongo:
        condition: service_healthy
      vpn:
        condition: service_healthy
      telegram_bot_api:
        condition: service_started
    network_mode: "service:vpn"
    restart: unless-stopped
    command: sh -c "sleep 15 && ./venv/bin/python bot/main.py"

  mongo:
    image: mongo:5.0
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - bot_network
    command: sh -c "sleep 20 && mongod --quiet --logpath /dev/null"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mongo_data:
    driver: local

networks:
  bot_network:
